version: "3.9"
services:
  app:
    build:
      context: ./docker
      dockerfile: DockerfileNextjs
    volumes:
      - ./src/:/usr/src/app
    ports: 
      - 3000:3000
    environment:
      - TZ=Asia/Tokyo
    networks:
      - yamanobo
    command: sh -c "npm install && npm run dev"
    tty: true
  storybook:
    build:
      context: .
      dockerfile: ./docker/DockerfileStorybook
    ports:
      - 6006:6006
    volumes:
      - ./storybook:/usr/src/app
    # command: sh -c "npm install --legacy-peer-deps && npm run storybook"
    # command: sh -c "npm run storybook"
    stdin_open: true
    tty: true
    environment:
      - TZ=Asia/Tokyo
    networks:
      - yamanobo
  postgres:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGAPASSWORD: ${PGPASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      TZ: "Asia/Tokyo"
    ports:
      - 5432:5432
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - yamanobo

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    ports:
      - 8080:80
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    depends_on:
      - postgres
    networks:
      - yamanobo

networks:
  yamanobo:
    driver: bridge

volumes:
  postgres:

